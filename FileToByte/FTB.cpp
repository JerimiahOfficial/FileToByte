#include "FTB.h"
#include "Globals.h"

const char* byte_to_hex_lookup_table = "0123456789abcdef";

namespace FileToByte {
	std::string Convert(std::string path) {
		if (!std::filesystem::exists(path))
			return "";

		// Convert given path to byte array
		std::vector<char> buffer;
		std::ifstream file(path, std::ios::binary);

		if (!file.is_open())
			return Globals::res = "";

		file.seekg(0, std::ios::end);
		buffer.reserve(file.tellg());
		file.seekg(0, std::ios::beg);
		buffer.insert(buffer.begin(), std::istreambuf_iterator<char>(file), std::istreambuf_iterator<char>());
		file.close();

		std::string fileHeader = "#pragma once\n\n/*\n *\tGenerated by File To Byte\n *\thttps://github.com/JerimiahOfficial/FileToByte\n */\n\nunsigned char %s[/*%zu*/] = {\n\t";
		std::string fileFooter = "\n};";

		// Convert buffer to string with hex values 0x00 format
		std::string fileContents = "";
		for (auto i = 0; i < buffer.size(); i++) {
			fileContents += "0x" + std::string(1, byte_to_hex_lookup_table[(buffer[i] & 0xF0) >> 4]) + std::string(1, byte_to_hex_lookup_table[buffer[i] & 0x0F]) + ", ";
			if (i % 16 == 15)
				fileContents += "\n\t";
		}

		// Return string
		return std::string(fileHeader + fileContents + fileFooter).c_str();
	}
}